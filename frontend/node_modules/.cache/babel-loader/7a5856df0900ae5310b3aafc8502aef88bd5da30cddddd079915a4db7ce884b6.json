{"ast":null,"code":"var _jsxFileName = \"C:\\\\pokemon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokemonList from './components/PokemonList';\nimport SearchFilter from './components/SearchFilter';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [pokemon, setPokemon] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [pipelineRunning, setPipelineRunning] = useState(false);\n  useEffect(() => {\n    fetchTypes();\n    fetchPokemon();\n  }, [selectedType]);\n  const fetchPokemon = async () => {\n    setLoading(true);\n    try {\n      const url = selectedType ? `${API_BASE}/pokemon/?type_filter=${selectedType}` : `${API_BASE}/pokemon/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setPokemon(data);\n    } catch (error) {\n      console.error('Error fetching Pokémon:', error);\n    }\n    setLoading(false);\n  };\n  const fetchTypes = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/types/`);\n      const data = await response.json();\n      setTypes(data);\n    } catch (error) {\n      console.error('Error fetching types:', error);\n    }\n  };\n  const runPipeline = async () => {\n    setPipelineRunning(true);\n    try {\n      const response = await fetch(`${API_BASE}/pokemon/run-pipeline/`, {\n        method: 'POST'\n      });\n      const result = await response.json();\n      alert(`Pipeline completed! Successful: ${result.successful}, Failed: ${result.failed}`);\n      fetchPokemon(); // Refresh the list\n    } catch (error) {\n      console.error('Error running pipeline:', error);\n      alert('Error running pipeline');\n    }\n    setPipelineRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pok\\xE9mon Data Pipeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runPipeline,\n        disabled: pipelineRunning,\n        className: \"pipeline-btn\",\n        children: pipelineRunning ? 'Running Pipeline...' : 'Run Data Pipeline'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n        types: types,\n        selectedType: selectedType,\n        onTypeChange: setSelectedType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading Pok\\xE9mon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PokemonList, {\n        pokemon: pokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1aP77QNRx0g+3q4wOchDqiCqmBk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PokemonList","SearchFilter","jsxDEV","_jsxDEV","API_BASE","App","_s","pokemon","setPokemon","types","setTypes","selectedType","setSelectedType","loading","setLoading","pipelineRunning","setPipelineRunning","fetchTypes","fetchPokemon","url","response","fetch","data","json","error","console","runPipeline","method","result","alert","successful","failed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onTypeChange","_c","$RefreshReg$"],"sources":["C:/pokemon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PokemonList from './components/PokemonList';\r\nimport SearchFilter from './components/SearchFilter';\r\nimport './App.css';\r\n\r\nconst API_BASE = 'http://localhost:8000';\r\n\r\nfunction App() {\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [pipelineRunning, setPipelineRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTypes();\r\n    fetchPokemon();\r\n  }, [selectedType]);\r\n\r\n  const fetchPokemon = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const url = selectedType \r\n        ? `${API_BASE}/pokemon/?type_filter=${selectedType}`\r\n        : `${API_BASE}/pokemon/`;\r\n      \r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setPokemon(data);\r\n    } catch (error) {\r\n      console.error('Error fetching Pokémon:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchTypes = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/types/`);\r\n      const data = await response.json();\r\n      setTypes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching types:', error);\r\n    }\r\n  };\r\n\r\n  const runPipeline = async () => {\r\n    setPipelineRunning(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/pokemon/run-pipeline/`, {\r\n        method: 'POST'\r\n      });\r\n      const result = await response.json();\r\n      alert(`Pipeline completed! Successful: ${result.successful}, Failed: ${result.failed}`);\r\n      fetchPokemon(); // Refresh the list\r\n    } catch (error) {\r\n      console.error('Error running pipeline:', error);\r\n      alert('Error running pipeline');\r\n    }\r\n    setPipelineRunning(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Pokémon Data Pipeline</h1>\r\n        <button \r\n          onClick={runPipeline} \r\n          disabled={pipelineRunning}\r\n          className=\"pipeline-btn\"\r\n        >\r\n          {pipelineRunning ? 'Running Pipeline...' : 'Run Data Pipeline'}\r\n        </button>\r\n      </header>\r\n\r\n      <main>\r\n        <SearchFilter \r\n          types={types}\r\n          selectedType={selectedType}\r\n          onTypeChange={setSelectedType}\r\n        />\r\n        \r\n        {loading ? (\r\n          <div className=\"loading\">Loading Pokémon...</div>\r\n        ) : (\r\n          <PokemonList pokemon={pokemon} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}